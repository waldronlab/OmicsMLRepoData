---
title: "Explore datasets in cBioPortalData - Molecular Profiles"
author: "Sehyun Oh"
date: "`r format(Sys.time(), '%B %d, %Y')`"
format:
    html:
        fontsize: 14px
        toc: true
        top-depth: 2
abstract: "Prepare U24 Supplement: AI/ML-ready"
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, eval=FALSE)
```

```{r echo=FALSE, eval=TRUE}
suppressPackageStartupMessages({
    library(cBioPortalData)
    library(dplyr)
})
```

# Connect to cBioPortal
```{r}
cbio <- cBioPortal()
cbioStudies <- getStudies(cbio)  
```

# Collect molecular profiles
```{r eval=FALSE}
studyIds <- cbioStudies$studyId
molecular_var_all <- vector(mode = "list", length = length(studyIds))
names(molecular_var_all) <- studyIds

for (studyId in studyIds) {
    x <- molecularProfiles(cbio, studyId)
    molecular_var_all[[studyId]] <- x
}

## Save the summary
fname <- paste0("cBioPoral_all_molecularProfile_", Sys.Date(), ".rds")
saveRDS(molecular_var_all, file = fname)
```

```{r echo=FALSE}
studyIds <- cbioStudies$studyId
fnames <- list.files(getwd())
fname <- fnames[grep("cBioPortal_all_molecularProfile_", fnames)]
molecular_var_all <- readRDS(fname)
```

# Molecular Profiles
The minimum and the maximum number of metadata per study is 8 and 11, respectively.
```{r}
## Ranges of the number of available clinical variables
molecular_var <- lapply(molecular_var_all, colnames)
num <- sapply(molecular_var, length)
summary(num)
```

11 unique molecular variables are available.
```{r}
length(unique(unlist(molecular_var)))  # the number of unique clinical variables
allMolProfiles <- sort(table(unlist(molecular_var)), decreasing = TRUE)
allMolProfiles
```

Combine all the metadata (= 11) from all the studies (= 360).
```{r eval=FALSE}
template <- as.data.frame(matrix(data = character(), nrow = 1, 
                                 ncol = length(allMolProfiles)))
colnames(template) <- names(allMolProfiles)

## Coerce the data type
template[,c("showProfileInAnalysisTab", "patientLevel")] <- as.logical(template[,c("showProfileInAnalysisTab", "patientLevel")])
template[,c("pivotThreshold")] <- as.double(template[,c("pivotThreshold")])

for (i in seq_along(molecular_var_all)) {
    template <- dplyr::full_join(template, molecular_var_all[[i]], 
                                 by = colnames(molecular_var_all[[i]]))
    # print(paste(i, "out of", length(molecular_var_all), "is added."))
}

template <- template[-1,] # remove the 1st NA row
fname <- paste0("cBioPoral_all_molecularProfile_combined_", Sys.Date(), ".rds")
saveRDS(template, fname)
```

## Summary
The number of studies available with a given molecular data
```{r}
tb <- template %>% 
    group_by(molecularAlterationType) %>%
    summarise(n = length(unique(studyId)))
tb

write.csv(tb, "~/Documents/U24_Supplement_Grant/cBioPortal_all_molecularProfile_table.csv", row.names = FALSE)

# ## Detailed info on molecular data
# library(tableone)
# z <- CreateTableOne(vars = "name",
#                     data = template, 
#                     strata = "molecularAlterationType", 
#                     includeNA = TRUE) %>%
#     print(., showAllLevels = TRUE)
```


The number of molecular data per study. cBioPortal data has the minimum of 1 
and the maximum of 18 different molecular data.
```{r}
res <- template %>% 
    group_by(studyId) %>%
    summarise(n = length(name))
summary(res)
```



```{r fig.width=10, fig.height=4}
## Plot
end_point = 0.5 + length(sumMeta) + length(sumMeta) - 1
barplot(sumMeta/length(molecular_var)*100,
        main = "Availability of 55 clinical variables in cBioPortal data",
        ylab = "Study-level availability (%)",
        xlab = "",
        xaxt = "n", # Do not plot the default labels
        las = 2, space = 1)
text(seq(1.5, end_point, by = 2), par("usr")[3]-0.25, 
     srt = 60, adj = 1, xpd = TRUE,
     labels = paste(names(sumMeta)), cex = 0.65)
```


# Molecular Data
```{r fig.height=4, fig.width=7}
## Subset clinical variable with >= 20% value available out of all the samples (= 179,266)
sub <- x_percent[x_percent >= 20] # 23 variables out of 3,504
    
## Plot
end_point = 0.5 + length(sub) + length(sub) - 1
barplot(sub,
        main = "Availability of clinical variables for cBioPortal samples",
        ylab = "Completeness at the sample level (%)",
        xlab = "",
        xaxt = "n", # Do not plot the default labels
        las = 2, space = 1)
text(seq(1.5, end_point, by = 2), par("usr")[3]-0.25, 
     srt = 60, adj = 1, xpd = TRUE,
     labels = paste(names(sub)), cex = 0.75)
```