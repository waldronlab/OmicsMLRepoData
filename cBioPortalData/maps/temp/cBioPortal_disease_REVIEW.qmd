---
title: "Review: cBioPortal disease curation"
author: "Sehyun Oh"
date: "`r format(Sys.time(), '%B %d, %Y')`"
format:
    html:
        fontsize: 14px
        toc: true
        top-depth: 3
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, 
                      warning = FALSE, 
                      message = FALSE, 
                      collapse = TRUE, 
                      eval = FALSE)
```

```{r}
suppressPackageStartupMessages({
    library(ggplot2)
})
```

```{r}
dir <- "~/OmicsMLRepo/OmicsMLRepoData/cBioPortalData"
```

# Maps
```{r}
a <- read.csv(file.path(dir, "maps/cBioPortal_curated_columns_map.csv"))
b <- read.csv(file.path(dir, "maps/cBioPortal_disease_ontology_map.csv"))
c <- read.csv(file.path(dir, "maps/cBioPortal_potential_columns_map.csv"))
d <- read.csv(file.path(dir, "maps/cbio_cancer_ontology.csv"))
```

### Re-shape `cBioPortal_potential_columns_map.csv`
```{r}
colnames(c) <- c("curation_category",
                 "original_columns", 
                 "original_columns_num")
head(tibble::as.tibble(c))
```

[Todo] Rename this table to `cBioPortal_curation_schema.csv`
```{r eval=FALSE}
write.csv(c, 
          file = file.path(dir, "maps/cBioPortal_curation_schema.csv"),
          row.names = FALSE)
```


### Re-structure `cBioPortal_curated_columns_map.csv`
```{r echo=FALSE, eval=FALSE}
a %>% 
    group_by(curated_column) %>% 
    summarize(m = mean(completeness * 100),
              sd = sd(completeness * 100)) %>%
    ggplot(aes(x = curated_column)) + 
    theme(axis.text.x = element_text(angle = 45, vjust = 0.5)) +
    geom_boxplot(aes(lower = m-sd,
                     upper = m + sd,
                     middle = m,
                     ymin = m - 3*sd,
                     ymax = m + 3*sd),
                 stat="identity")
```

```{r}
url <- "https://docs.google.com/spreadsheets/d/1IgrVEdgCZdvBmWrER21A57lSkfDjdRdV3RbK_yoqMl4/edit?usp=sharing"
ss <- googledrive::as_id(url)
x <- googlesheets4::read_sheet(ss, "curated_columns_map")
x <- x[-76,] # remove the last summary line
```

```{r}
curation_summary <- x %>% 
    subset(select = -c(unique_vals)) %>%
    group_by(curated_column) %>%
    summarize(curated_column = unique(curated_column),
              original_columns = paste(original_column, collapse = ";"),
              original_columns_num = length(original_column),
              original_columns_completeness = paste(round(completeness_OC, 4), collapse = ";"),
              curated_column_completeness = unique(round(completeness_CC, 2)),
              original_unique_values_num = unique(unique_vals_OC[!is.na(unique_vals_OC)]),
              curated_unique_values_num = unique(unique_vals_CC[!is.na(unique_vals_CC)]))
```

[Todo] Rename this table to `cBioPortal_disease_curation_summary.csv`
```{r eval=FALSE}
write.csv(curation_summary, 
          file = file.path(dir, "maps/cBioPortal_disease_curation_summary.csv"),
          row.names = FALSE)
```



### Re-structure `cBioPortal_disease_ontology_map.csv`
[Question] End of table is incomplete? (`ind` rows)
```{r}
b <- b[,c("original_value",
          "curated_ontology",
          "curated_ontology_term_id",
          "onto_source")]
colnames(b)[4] <- "curated_ontology_term_db"
b$curated_ontology_term_id <- gsub("_", ":", b$curated_ontology_term_id)

## Clean up incomplete(?) rows
b[b == ""] <- NA
ind <- which(is.na(b$curated_ontology_term_db))
b <- b[-ind,]
```

[Todo] Rename this table to `cBioPortal_diseases_map.csv`
```{r eval=FALSE}
write.csv(b, 
          file = file.path(dir, "maps/cBioPortal_diseases_map.csv"),
          row.names = FALSE)
```


### Change the column name of `cbio_cancer_ontology.csv`
```{r}
colnames(d) <- c("original_value",
                 "curated_ontology",
                 "curated_ontology_term_id")

## Check there is no multiple values or SNOMED (term id from SNOMED doesn't include the db name)
grep("<;>", d$curated_ontology_term_id)
ind <- grep(":", d$curated_ontology_term_id)
d[-ind, 3]
```
Add ontology term database column
```{r}
library(stringr)
pattern <- "^(.*?):"
d$curated_ontology_term_db <- str_extract(d$curated_ontology_term_id, pattern) %>% 
    str_remove(., ":")
```

[Todo] Rename this table to `cBioPortal_cancer_map.csv`
```{r eval=FALSE}
write.csv(d, 
          file = file.path(dir, "maps/cBioPortal_cancer_map.csv"),
          row.names = FALSE)
```


# Data
[Todo] Assign `NA` instead of the empty string (`""`)
```{r}
disease <- read.csv(file.path(dir, "data/curated_disease.csv"))
```

[Todo] Re-assign `curated_cancer_type` and `curated_cancer_type_detailed` 
```{r}
ind <- which(disease$curated_cancer_type != disease$curated_cancer_type_detailed)
head(disease[ind,])
```

[Question] Restructure the `cBioPorat_curated_disease.csv` data table to include:
- curation_id
- original_acronym_source
- original_cancer_status_source
- original_cancer_subtype_source
- original_cancer_type_source
- original_cancer_type_detailed_source 
- original_disease_source
- original_metastasis_source           
- original_specimen_type_source

- original_acronym_value
- original_cancer_status_source
- original_cancer_subtype_source
- original_cancer_type_source
- original_cancer_type_detailed_source 
- original_disease_source
- original_metastasis_source           
- original_specimen_type_value

- curated_acronym
- curated_cancer_status
- curated_cancer_subtype
- curated_cancer_type
- curated_cancer_type_detailed 
- curated_disease
- curated_metastasis           
- curated_specimen_type

- curated_acronym_ontology_term_id
- curated_cancer_status
- curated_cancer_subtype
- curated_cancer_type
- curated_cancer_type_detailed 
- curated_disease
- curated_metastasis           
- curated_specimen_type_ontology_term_id
