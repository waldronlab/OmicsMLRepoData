---
title: "ETL process for curatedMetagenomicData (cMD) metadata curation/harmonization"
author:
  - Sehyun Oh
date: "`r format(Sys.time(), '%B %d, %Y')`"
format:
    html:
        fontsize: 14pxs
        toc: true
        top-depth: 3
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, 
                      warning = FALSE,
                      message = FALSE,
                      collapse = TRUE,
                      eval = FALSE)
```

```{r}
suppressPackageStartupMessages({
    library(googlesheets4)
    library(readr)
})
```


```{r}
cmd_etl_dir <- "~/OmicsMLRepo/OmicsMLRepoData/curatedMetagenomicData/ETL"
list.files(cmd_etl_dir)
```


# Curated metadata table
This script collect all the curated metadata table for each attribute and 
create the `curated_all` table, which containing 22,588 sample for 46 newly
created curated columns.

```{r}
source(file.path(cmd_etl_dir, "0_assemble_curated_metadata.R"))
```

```{r save_curated_tb, eval=FALSE}
dir <- "~/OmicsMLRepo/OmicsMLRepoData"
fpath <- file.path(dir, "inst/extdata/cMD_curated_sampleMetadata_only.csv")
write.csv(curated_all, fpath, row.names = FALSE)
```


# Sync curation maps
Curation maps are tables manually created in Google Sheet by assigning 
appropriate ontology terms to original values. These tables contain four 
main columns with some additional columns depending on a attribute.

Four main columns are labeled as `original_value`, `curated_ontology`,
`curated_contology_term_id`, and `curated_ontology_term_db`.

```{r}
source(file.path(cmd_etl_dir, "1_sync_curation_map.R"))
```

```{r save_curation_maps, eval=FALSE}
# Directory to save curation_maps from Google Sheet
cmd_maps_dir <- "~/OmicsMLRepo/OmicsMLRepoData/curatedMetagenomicData/maps"

for (attribute in attributes) {
    map <- get(attribute)
    fname <- paste0(attribute, ".csv")
    write.csv(map, file.path(cmd_maps_dir, fname), row.names = FALSE)

}
```


# Assemble merging schema
This script load the merging/curation/harmonization schema tables from Google
Sheet and summarize them in our 'merging schema' format, `cmd_ms`, with
completeness and uniqueness information.

```{r}
source(file.path(cmd_etl_dir, "2_assemble_merging_schema.R"))
```

```{r save_cmd_merging_schema, eval=FALSE}
## GitHub project
extDir <- "~/OmicsMLRepo/OmicsMLRepoData/inst/extdata"
write_csv(cmd_ms, file.path(extDir, "cMD_merging_schema.csv"))

## Google Sheet
url <- "https://docs.google.com/spreadsheets/d/1xziFB_zBl32BjNarcyEN4GupTYpPtq5aDz0GbRbWvtk/edit?usp=sharing"
ss <- googledrive::as_id(url)
googlesheets4::write_sheet(cmd_ms, ss = ss, sheet = "cMD_merging_schema")
```



# Data dictionary
## Initial assembly
The resulting table from the below script, `final_data_dictionary`, contains
all the columns in the final version of cMD sampleMetadata in the `col.name`
column. This table is exported 

```{r}
source(file.path(cmd_etl_dir, "3_assemble_data_dictionary_template.R"))
```

## Populate template data dictionary
Data dictionary contents should be modified only through the `template_*.R` 
scripts within the `~/OmicsMLRepo/OmicsMLRepoData/curatedMetagenomicData/ETL/R`
directory.

```{r}
final_dd <- template_dd # from `3_assemble_data_dictionary_template.R`

projDir <- "~/OmicsMLRepo/OmicsMLRepoData/curatedMetagenomicData"
mapDir <- file.path(projDir, "maps")
dataDir <- file.path(projDir, "data")
scriptDir <- file.path(projDir, "ETL/R")

source(file.path(cmd_etl_dir, "4_populate_data_dictionary.R"))
```

## Save
```{r save_cmd_merging_schema, eval=FALSE}
## Google Sheet
url <- "https://docs.google.com/spreadsheets/d/1xziFB_zBl32BjNarcyEN4GupTYpPtq5aDz0GbRbWvtk/edit?usp=sharing"
ss <- googledrive::as_id(url)
googlesheets4::write_sheet(final_dd, ss = ss, sheet = "cMD_data_dictionary")
```

```{r}
## GitHub project
extDir <- "~/OmicsMLRepo/OmicsMLRepoData/inst/extdata"
write_csv(final_dd, file.path(extDir, "cMD_data_dictionary.csv"))
```


