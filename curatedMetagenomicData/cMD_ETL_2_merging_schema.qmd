---
title: "ETL: Merging Schema for cMD metadata harmonization"
author:
  - Sehyun Oh
date: "`r format(Sys.time(), '%B %d, %Y')`"
format:
    html:
        fontsize: 14pxs
        toc: true
        top-depth: 3
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, 
                      warning = FALSE,
                      message = FALSE,
                      collapse = TRUE)
```

```{r echo=FALSE}
suppressPackageStartupMessages({
    library(dplyr)
    library(googlesheets4)
    library(readr)
})
```


# Completeness update
```{r message=FALSE}
dir <- "~/OmicsMLRepo/OmicsMLRepoData"
fpath <- file.path(dir, "inst/extdata/cMD_curated_sampleMetadata.csv")
allSampleMetadata <- read_csv(fpath)
```

```{r import_gs, eval=FALSE}
url <- "https://docs.google.com/spreadsheets/d/1xziFB_zBl32BjNarcyEN4GupTYpPtq5aDz0GbRbWvtk/edit?usp=sharing"
ss <- googledrive::as_id(url)
merging_schema <- googlesheets4::read_sheet(ss = ss, sheet = "merging_schema")
```

The `merging_schema` table summaries the original fields and their 
curated correspondents as listed in their column names.

```{r cal_completness_and_report, eval=FALSE}
library(OmicsMLRepoCuration)
library(curatedMetagenomicData)

## Completeness and uniqueness of original/source columns
a <- merging_schema$original_field 
original_field_name <- sapply(a, function(x) {
    strsplit(x, split = ";") %>% 
        unlist %>% 
        # paste0("legacy_", .) %>% #<<<<<<<<<<<<<<<<<<<<<<< mark 'legacy_' for the final harmonization
        paste0(., collapse = ";")
}) %>% as.vector

original_field_name[which(original_field_name == "legacy_NA")] <- NA
original_field_name[which(original_field_name == "NA")] <- NA

original_field_completeness <- checkCurationStats(
    fields_list = original_field_name,
    DB = sampleMetadata)
original_field_unique_vals <- checkCurationStats(
    fields_list = original_field_name,
    check = "unique",
    DB = sampleMetadata)

## Completeness and uniqueness of original/source columns
b <- merging_schema$curated_fields 
curated_field_name <- sapply(b, function(x) {
    strsplit(x, split = ";") %>% 
        unlist %>% 
        # paste0("curated_", .) %>% 
        gsub("curated_", "", .) %>%
        paste0(., collapse = ";")
}) %>% as.vector

curated_field_completeness <- checkCurationStats(
    fields_list = curated_field_name,
    DB = allSampleMetadata)
curated_field_unique_vals <- checkCurationStats(
    fields_list = curated_field_name,
    check = "unique",
    DB = allSampleMetadata)
```

```{r eval=FALSE}
merging_schema$original_field_completeness <- original_field_completeness
merging_schema$curated_field_completeness <- curated_field_completeness
merging_schema$original_field_unique_vals <- original_field_unique_vals
merging_schema$curated_field_unique_vals <- curated_field_unique_vals

merging_schema <- merging_schema %>% 
    # dplyr::relocate(original_field_completeness, .after = original_fields) %>%
    # dplyr::relocate(curated_field_completeness, .after = curated_fields) %>%
    dplyr::relocate(original_field_unique_vals, .after = original_field_completeness) %>%
    dplyr::relocate(curated_field_unique_vals, .after = curated_field_completeness)
```

```{r updated_GH, eval=FALSE}
dir <- "~/OmicsMLRepo/OmicsMLRepoData"
write.csv(merging_schema, 
          file.path(dir, "inst/extdata/cMD_merging_schema.csv"), 
          row.names = FALSE)
```

```{r save_as_Google_Sheets, eval=FALSE}
googlesheets4::write_sheet(merging_schema, ss = ss, sheet = "merging_schema")
```

