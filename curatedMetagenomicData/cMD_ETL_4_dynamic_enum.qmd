---
title: "ETL: Incorporate dynamic enum for cMD metadata"
author:
  - Sehyun Oh
date: "`r format(Sys.time(), '%B %d, %Y')`"
format:
    html:
        fontsize: 14pxs
        toc: true
        top-depth: 3
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, 
                      warning = FALSE,
                      message = FALSE,
                      collapse = TRUE)
```

```{r echo=FALSE}
suppressPackageStartupMessages({
    library(dplyr)
    library(readr)
    library(OmicsMLRepoR)
})
```

# Incorporate dynamic enum nodes
```{r}
ext_dir <- "~/OmicsMLRepo/OmicsMLRepoData/inst/extdata"
dd <- read_csv(file.path(ext_dir, "cMD_data_dictionary.csv"))
```

```{r}
## Get the top nodes for dynamic enum. Input is a merging schema table.
getTopNodes <- function(curated_col, dd) {
    # `curated_col` is the curated column name to find the dynamic enum node for
    # data_dictionary as an input for dd argument
    colnames <- c(curated_col,
                  paste0("curated_", curated_col))
    ind <- which(dd$col.name %in% colnames)
    terms <- dd[[ind, "ontology"]] %>% strsplit(split = "\\|") %>% 
        unlist %>% na.omit %>% as.vector
    onto <- sapply(terms, 
               function(x) unlist(strsplit(x, split = ":"))[1])
    
    # remove SNOMED from the term id
    terms <- gsub("SNOMED:", "", terms)
    
    topNodes <- commonNodes(ids = terms, dbs = onto)
    res <- paste0(topNodes$ontology_term_id, collapse = ";")
    
    dd$dynamic_enum[ind] <- res
    dd$dynamic_enum_property[ind] <- "descendent"
    
    return(dd)
}
```

```{r}
## Attributes to use dynamic enum
targetAttrs <- c("disease", "target_condition", "treatment", "bodysite",
                 "biomarker_value")
```

```{r}
updated_dd <- getTopNodes("sex", dd)
updated_dd <- getTopNodes("age_group", dd)
```

