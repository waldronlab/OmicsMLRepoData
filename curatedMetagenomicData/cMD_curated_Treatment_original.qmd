---
title: "Harmonize treatment-associated information in cMD sample metadata"
author: "Sehyun Oh"
date: "`r format(Sys.time(), '%B %d, %Y')`"
format:
    html:
        fontsize: 14px
        toc: true
        top-depth: 3
abstract: "Prepare U24 Supplement: AI/ML-ready"
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, 
                      collapse = TRUE, eval = FALSE)
```


```{r}
suppressPackageStartupMessages({
    library(curatedMetagenomicData)
})

sampleMetadata$curation_id <- paste(sampleMetadata$study_name,
                                    sampleMetadata$sample_id, sep = ":")
```

```{r gs_connection}
## Google Sheet connection
url <- "https://docs.google.com/spreadsheets/d/1QSbB_b1DkfqOc7q5eHE0IDHSiGqNUyTE8d4GzbSEzjM/edit?usp=sharing"
ss <- googledrive::as_id(url)
```



```{r collapse=FALSE}
allCols <- colnames(sampleMetadata)
allCols[grep("medication|medi|drug", allCols, ignore.case = TRUE)] # drug
allCols[grep("antibiotics|antibio", allCols, ignore.case = TRUE)] # antibiotics
allCols[grep("dosage|dose|unit|mg", allCols, ignore.case = TRUE)] # dosage
allCols[grep("treatment", allCols, ignore.case = TRUE)] # treatment
```



# antibiotics
```{r collapse=FALSE}
## Antibiotics Current Use
table(sampleMetadata$antibiotics_current_use, useNA = "ifany")

## Antibiotics Used
length(unique(sampleMetadata$antibiotics_family))
```

Double-check whether all and only samples with `antibiotics_current_use = "yes"`
have values for `antibiotics_family` column.

```{r}
## `antibiotics_current_use=="yes"` has `antibiotics_family` information?
tb <- sampleMetadata[,c("antibiotics_current_use", "antibiotics_family")]

abx_yes <- which(tb$antibiotics_current_use == "yes")
abx_no <- which(tb$antibiotics_current_use == "no")
abx_na <- which(is.na(tb$antibiotics_current_use))

table(is.na(tb$antibiotics_family[abx_yes])) # expected all `FALSE` = abx_yes has abx_family info
table(is.na(tb$antibiotics_family[abx_no])) # expected all `TRUE` = abx_no has no abx_family info
table(is.na(tb$antibiotics_family[abx_na])) # expected all `TRUE` = abx_na has no abx_family info
```

`r sum(is.na(tb$antibiotics_family[abx_yes]))` rows don't have information on 
`antibiotics_family` even though they are currently exposed to antibiotics.

```{r}
ind <- intersect(abx_no, which(!is.na(tb$antibiotics_family)))
table(tb[ind,]$antibiotics_family) # 57 wrong entries
```

`r length(ind)` rows with `antibiotics_current_use = no`, which are supposed
to have no information on `antibiotics_family` , still have the values. All
of them are wrong information - anti-viral and beta-blocker (treating abnormal 
heart rhythms) medications.

And it seems like those wrong `antibiotics_family` information are all from
one study, `r unique(sampleMetadata$study_name[ind])`, and supposed to be 
entered under the `treatment` column.

```{r}
unique(sampleMetadata$study_name[ind])
table(sampleMetadata$treatment[ind], useNA = "ifany")
```

### Move wrong abx_family info to treatment
```{r}
curated_meta <- sampleMetadata
curated_meta$curated_antibiotics_family <- curated_meta$antibiotics_family
curated_meta$curated_treatment <- curated_meta$treatment

for (i in ind) {
    curated_meta$curated_treatment[i] <- curated_meta$antibiotics_family[i]
    curated_meta$curated_antibiotics_family[i] <- NA
}
```




# treatment
```{r collapse=FALSE}
## Treatment Options Used
naTrt <- sum(is.na(sampleMetadata$treatment))
naTrt

uniqueTrt <- length(unique(sampleMetadata$treatment))
uniqueTrt

head(sort(table(sampleMetadata$treatment, useNA = "ifany"), decreasing = TRUE))
```

```{r}
nonNaTrt <- sampleMetadata$treatment[!is.na(sampleMetadata$treatment)]
allTrts <- strsplit(nonNaTrt, split = ";") %>% unlist %>% unique
length(allTrts)
```

`r round(naTrt/nrow(sampleMetadata)*100)` % of samples have no treatment 
information. `r nrow(sampleMetadata)-naTrt` samples show `r uniqueTrt` unique
treatment options, which are the combinations of `r length(allTrts)` unique 
treatments.


```{r echo=FALSE, eval=FALSE}
## Check whether any antibiotics are included in treatments.
library(AMR)
abx_class <- ab_group(allTrts)
is_abx_trt <- data.frame(treatment = allTrts,
                         is_abx = abx_class)
```


## Export unique treatments
Export the table of unique treatments to Google Sheet for manual curation. 
The curated table will be used as a map for harmonization/curation.
```{r eval=FALSE}
curated_treatment <- data.frame(original_value = allTrts,
                                curated_ontology_term = NA,
                                curated_ontology_term_id = NA)
sheet_write(curated_treatment, ss = ss, sheet = "treatment_ontology")
```

```{r import_curated_treatment_map}
curated_treatment <- read_sheet(ss, sheet = "treatment_ontology")
```

```{r save_curated_treatment_map}
## Save
write.csv(curated_treatment, "maps/cMD_treatment_ontology.csv", row.names = FALSE)
```

