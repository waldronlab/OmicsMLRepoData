---
title: "Clean-up the disease attributes of cMD sample metadata"
author: "Sehyun Oh"
date: "`r format(Sys.time(), '%B %d, %Y')`"
format:
    html:
        fontsize: 14px
        toc: true
        top-depth: 3
abstract: "Prepare U24 Supplement: AI/ML-ready"
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, 
                      collapse = TRUE)
```

# Load Packages 
```{r}
suppressPackageStartupMessages({
    library(gsheet)
    library(dplyr)
    library(RCurl) # for getURL
    library(curatedMetagenomicData)
    library(OmicsMLRepoData)
    library(readr)
    library(tidyr)
    library(yaml)
    library(googlesheets4)
    library(tidyverse)
})
```

# Collect curations files 
Manual curation efforts for curatedMetagenomicData `sampleMetadata` are 
happening in a several GitHub repositories. We will first collect the most
up-to-date versions of them. Data inputs include: 

1. Hand-curated disease ontology table ([link](https://github.com/waldronlab/curatedMetagenomicDataCuration/blob/master/inst/extdata/updated-disease-ontology.csv)) 
2. [Body-site-ontology.csv](https://github.com/waldronlab/curatedMetagenomicDataCuration/blob/master/inst/extdata/body-site-ontology.csv)
3. Curated metagenomic data curation tables ([link](https://github.com/waldronlab/curatedMetagenomicDataCuration/tree/master/inst/extdata)) 
4. `sampleMetadata` table from the curatedMetagenomicData package ([link](https://github.com/waldronlab/curatedMetagenomicData/blob/master/data/sampleMetadata.rda))

## curatedMetagenomicDataCuration
```{r}
file_url <- "https://raw.githubusercontent.com/waldronlab/curatedMetagenomicDataCuration/master/inst/extdata/updated-disease-ontology.csv"
cmd_disease <- read.csv(file_url, sep = ",", header = TRUE)
head(cmd_disease, 3)
```

## Sample metadata from cMD
```{r}
file_url <- "https://github.com/waldronlab/curatedMetagenomicData/raw/master/data/sampleMetadata.rda"
download.file(file_url, "sampleMetadata.rda")
load("sampleMetadata.rda")
```

## Disease ontology curation
```{r}
file_url <- "https://raw.githubusercontent.com/Ethan-Loo/Bioinformatics_Data_Curation_Collaboration/main/disease_ontology.yaml"
x <- yaml::yaml.load_file(file_url)
disease_ontology <- as.data.frame(do.call(rbind, x)) %>%
    tibble::rownames_to_column(., "Original.Abbreviation.Name")
head(disease_ontology, 3)
```

## OmicsMLRepo
```{r}
## Our curation file
```

# Merge Curation Files

## Disease

Merge 'study_condition' and 'disease_subtype' columns of the `sampleMetadata` 
table. 
```{r}
unique_subtype <- unique(sampleMetadata$disease_subtype)
subtype_all <- c() # collect all the subtypes
for (i in seq_along(unique_subtype)) {
    subtype <- strsplit(unique_subtype[i], split = ";") # split the split semicolon-separated values
    subtype_all <- c(subtype_all, unlist(subtype))
}
    
## All the unique study_condition and disease_subtypes
unique_disease <- c(unique(sampleMetadata$study_condition), unique(subtype_all)) 
## Format it as same as cmd_disease table
unique_disease_tb <- data.frame(Original.Abbreviation.Name = sort(unique_disease), 
                                Full.Name = NA,
                                Ontology.link = NA)
```

Next, we should combine `unique_disease_tb` and `cmd_disease` tables 
without losing any information.
```{r}
cmd_unique_disease <- rbind(cmd_disease, unique_disease_tb)
```

We subset `cmd_unique_disease` with the unique values that also have 
the `Ontology.link` value. This table is named `ont_complete`. 
```{r}
ont_complete <- cmd_unique_disease %>% 
    distinct(Original.Abbreviation.Name, .keep_all=TRUE) %>% 
    filter(Ontology.link != "")
```

Any unique value without `Ontology.link` information is subjected for the 
further manual curation and exported 
```{r}
# Filter rows where manual curation is needed
manaul_curation <- cmd_unique_disease %>% 
    distinct(Original.Abbreviation.Name, .keep_all=TRUE) %>% 
    filter(Ontology.link == "") %>%
    add_column(Revision_Required = "") # explains observations that require clarification
```

# Manual Curation

## Temporal file for manual curation

Export the merged mapping table to Google Sheet for manual curation.
```{r export_gs, eval=FALSE}
gs4_create("cMDOntology_NeedsCuration", sheets = manaul_curation)
```

## Save manually curated mapping table 

After the manual curation, update the target mapping table in GitHub. 
```{r eval=FALSE}
manual_curated <- read_sheet("https://docs.google.com/spreadsheets/d/1Vai_5gfH3UYg3F5eyA27NytqfAZMN0805aE8MBSQstk/edit?usp=sharing")
```

# Final curation file
 
```{r eval=FALSE}
## Rename `Full.Name` column header of `ont_complete` table to `Full.Name.Curated`
ont_complete <- rename(ont_complete, "Full.Name" = "Full.Name.Curated")
## Merge curated data with the cleaned DF
cMD_disease <- full_join(manual_curated, ont_complete, by = NULL)
## Save
write.csv(cMD_disease, "cMD_disease_ontology.csv", row.names = FALSE)
```

Need to repeat steps, shown above, for age. 

# Other attributes

## Age

Merge 'age', 'infant_age', and 'gestational_age' columns.
Outstanding task: Work with team to strategize ways to structure this data.  

## Bodysite

This curation is completed.

```{r}
file_url <- "https://raw.githubusercontent.com/waldronlab/curatedMetagenomicDataCuration/master/inst/extdata/body-site-ontology.csv"
cMD_bodysite <- read.csv(file_url, sep = ",", header = TRUE)
head(cMD_bodysite, 5)
```

# Appendix 

Used the `getPMID` function below to extract PMID where target values
were initially captured from. 

```{r getPMID_func}
library(curatedMetagenomicData)
getPMID <- function(key, value) {
    ind <- grep(value, sampleMetadata[,key])
    print(unique(sampleMetadata$PMID[ind]))
}
```

For example, 'T1D_nonconverter' term is initially curated as 
a 'disease_subtype' of the study with PMID 25662751.
```{r}
getPMID("disease", "T1D_nonconverter")
getPMID("study_condition", "T1D_nonconverter")
getPMID("disease_subtype", "T1D_nonconverter")
```

