---
title: "Convert map files to long form (1:1) mapping"
author:
  - Sehyun Oh
  - Kai Gravel-Pucillo
date: "`r format(Sys.time(), '%B %d, %Y')`"
format:
    html:
        fontsize: 14pxs
        toc: true
        top-depth: 3
abstract: "Prepare U24 Supplement: AI/ML-ready"
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, 
                    warning = FALSE,
                    message = FALSE,
                    collapse = TRUE,
                    eval = TRUE)
```

# Overview

This .qmd file demonstrates a workflow for converting one-to-many mapping files
to one-to-one mapping files.

# Setup
## Load Packages

```{r load}
suppressPackageStartupMessages({
  library(curatedMetagenomicData)
  library(tidyverse)
  library(googlesheets4)
  library(rols)
  library(dplyr)
  library(hash)
  library(vctrs)
  library(rvest)
})
```

## Load Files

First we will load the original map file and set the delimiter:
```{r}
# Set project directory
proj_dir <- "C:/Users/Owner/Desktop/CUNY Internship/cbio/Bodysite/"

# read in the csv file (original_map)
map <-read.csv(file = file.path(proj_dir, "cBioPortal_bodysite_map.csv"), header=T)

# Set the delimiter for the original map
delim <- "<;>"
```

## Initialize Dataframe

Then we will initialize a new dataframe and parse the old map into the new format:
```{r}
# Initialize dataframe
new_map <- data.frame(matrix(nrow=2000, ncol=0), "original_value"=NA, 
                      "curated_ontology"=NA, "curated_ontology_term_id"=NA,
                      "curated_ontology_term_db"=NA)

# Initialize row counter
row <- 0

# Parse the concatenated values into unique rows
for (cel in 1:length(map$curated_ontology)){
  values <- as.list(unlist(strsplit(map$curated_ontology[cel], delim)))
  for (val in values){
    indx <- match(val, values)
    row <- row + 1
    new_map$original_value[row] <- map$original_value[cel]
    new_map$curated_ontology[row] <- val
    new_map$curated_ontology_term_id[row] <- as.list(unlist(strsplit(map$curated_ontology_term_id[cel], delim)))[indx]
    new_map$curated_ontology_term_db[row] <- as.list(unlist(strsplit(as.character(new_map$curated_ontology_term_id[row]), ":")))[1]
  }
}

# Remove extra rows
new_map <- subset(new_map, !is.na(original_value))
```

Finally, we will export our completed map.
```{r export_curated_table, eval=FALSE}
# export to GitHub
write.csv(new_map, 
          file = file.path(proj_dir, "cBioPortal_bodysite_map_formatted.csv"),
          row.names = FALSE)
```