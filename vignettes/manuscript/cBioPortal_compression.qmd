---
title: "Plot cBioPortal metadata compression summary"
author:
  - Sehyun Oh
date: "`r format(Sys.time(), '%B %d, %Y')`"
format:
    html:
        fontsize: 14pxs
        toc: true
        top-depth: 3
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, 
                      warning = FALSE,
                      message = FALSE,
                      collapse = TRUE)
```

```{r echo=FALSE}
suppressPackageStartupMessages({
    # library(ggsankey)
    library(OmicsMLRepoR)
    library(ggplot2)
    library(dplyr)
    library(readr)
})
```

## Load and prepare merging schema
```{r}
extDir <- "~/OmicsMLRepo/OmicsMLRepoData/inst/extdata"
ms <- read_csv(file.path(extDir, "cBioPortal_merging_schema.csv"))
```

```{r}
ms_long <- ms %>%
    select(curated_field, original_field, original_field_num) %>%
    tidyr::separate_longer_delim(., original_field, delim = ";")

# comp_ori <- ms_sub %>%
#     filter(!duplicated(original_field))
# 
# comp_cur <- ms %>%
#     select(grep("curated_field", colnames(ms), value = TRUE)) %>%
#     tidyr::separate_longer_delim(., cols = grep("curated_field", colnames(ms), value = TRUE), delim = ";") %>%
#     filter(!duplicated(curated_field))
```

```{r}
## original_field
ori_df <- ms_long %>%
    group_by(curated_field) %>%
    mutate(column = original_field,
           from = n(),
           category = "original",
           .keep = "none") %>%
    dplyr::rename(curated_column = curated_field) %>%
    filter(!is.na(column))

cur_df <- ms %>%
    transmute(column = curated_field,
              curated_column = curated_field,
              from = 1,
              category = "curated")

df <- rbind(ori_df, cur_df)
df$category <- factor(df$category, levels = c("original", "curated"))
```

Sanity check
```{r}
length(unique(df$column[df$category == "original"])) # 673 original columns
length(unique(df$column[df$category == "curated"])) # 32 curated columns
```




## Plotting
```{r}
set.seed(1)
## Distinct color palette
library(RColorBrewer)
n <- length(unique(df$curated_column))
qual_col_pals <- brewer.pal.info[brewer.pal.info$category == 'qual',]
col_vector <- unlist(mapply(brewer.pal, 
                            qual_col_pals$maxcolors, 
                            rownames(qual_col_pals)))
```

```{r fig.width=2.8, fig.height=4}
cbio_compression <- ggplot(df, aes(fill = curated_column, y = 1, x = category)) +
    geom_bar(position = "stack", stat = "identity") +
    theme_bw(base_size = 12) +
    theme(legend.position = "none") +
    scale_fill_manual(values = col_vector) +
    labs(title = "", x = "", y = "# of attributes") +
    scale_x_discrete(labels = c("Original\nMetadata", "Curated\nMetadata"))
cbio_compression
```

```{r}
ggsave("figures/cbio_compression.png", width = 2.5, height = 3, dpi = 600)
```


## Summary for the report
```{r}
## the number of unique columns in original and curated metadata tables
num_of_cols <- df %>%
    group_by(category) %>%
    summarize(num_cols = length(unique(column)))
num_of_cols
```

```{r}
## 32 curated columns
cur_cols <- df %>% filter(category == "curated") %>% pull(column) %>% unique
cur_cols
length(cur_cols)
```

```{r eval=FALSE}
cbios <- readRDS("~/OmicsMLRepo/OmicsMLRepoData/cBioPortalData/source/cBioPortal_all_clinicalData_combined_2023-05-18.rds")

## 254 original columns for curated `treatment_type` column
df %>% 
    filter(curated_column == "treatment_type") %>% 
    pull(column) %>% 
    unique %>% 
    na.omit %>% 
    intersect(., colnames(cbios)) %>%
    length(.)
```



# Session Info
<details>
```{r eval=TRUE}
sessionInfo()
```
</details>
